"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PdfsService = void 0;
const common_1 = require("@nestjs/common");
const puppeteer = require("puppeteer");
let PdfsService = class PdfsService {
    async createPdf() {
        const browser = await puppeteer.launch();
        const page = await browser.newPage();
        const content = `
      <!DOCTYPE html>
      <html>
        <head>
          <title>Test PDF</title>
          <style>
            body { font-family: Arial, sans-serif; }
            h1 { color: blue; }
            p { font-size: 16px; }
          </style>
        </head>
        <body>
          <h1>Hello World</h1>
          <h1>Hello World</h1>
          <h1>Hello World</h1>
          <p>This is a PDF generated by Puppeteer in a NestJS application.</p>
        </body>
      </html>
    `;
        await page.setContent(content);
        const pdfBuffer = await page.pdf({ format: 'A4' });
        await browser.close();
        return pdfBuffer;
    }
};
exports.PdfsService = PdfsService;
exports.PdfsService = PdfsService = __decorate([
    (0, common_1.Injectable)()
], PdfsService);
//# sourceMappingURL=pdfs.service.js.map